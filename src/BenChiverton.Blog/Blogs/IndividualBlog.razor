@page "/blogpage/{BlogId}"

@inject IBlogService _blogService;
@inject IMarkdownService _markdownService;
@inject IJSRuntime _jsRuntime;

@if (_loaded)
{
    if (_blogExists)
    {
        @if (!string.IsNullOrEmpty(_readmeContent))
        {
            <MarkdownComponent RawMarkdown="@_readmeContent" />
        }
    }
    else
    {
        <div class="blog-not-found">
            <h3>Blog does not exist.</h3>
        </div>
    }
}
else
{
    <div class="page-loading-text">
        <h1>BC's blog</h1>
        <p>The blog is loading...</p>
    </div>
}

@code {
    [Parameter]
    public string BlogId { get; set; }

    private bool _blogExists;
    private bool _loaded = false;
    private BlogDetails _blogDetails;

    private string _readmeContent;

    protected override async Task OnParametersSetAsync()
    {
        _blogExists = _blogService.TryGetBlogDetails(BlogId, out _blogDetails);
        _loaded = true;
        if (!_blogExists)
        {
            return;
        }

        _readmeContent = await _markdownService.GetMarkdown(_blogDetails.MarkdownPage);
    }
}
